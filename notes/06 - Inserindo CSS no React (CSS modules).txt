Curso de React: Inserindo CSS no React (CSS modules) - #06

Adicionando CSS: Vamos aprender a deixar nosso CSS bonito.

-O CSS pode ser adicionado de forma global na aplicação, por meio do arquivo index.css por exemplo; (Se eu tenho estilos que eu quero aplicar em todos os elementos, faz mais sentido eu colocar no index.css pois ele vai estar fazendo exatamente oque eu quero aplicando no HTML todos esses estilos.)

-Porem é possivel estilizar a nivel de componentes; ( Mas vai ter uma hora que vou querer fazer a nivel de componente, separado, ficando mais fácil para manusear, encontrar, falicitando nosso trabalho, via css modules)

-Utilizamos o CSS modules para isso; (Basicamente é o arquivo de css que vamos criar, por convenção com a nomenclatura: componente.module.css, não precisa ser exatamente com esse nome.)

-Basta criar um arquivo como: Componente.module.css; (A ideia é que tenhamos o nomedoarquivo primeiro, depois .module.css, tudo junto, eai carregamos o componente e o webpackner que esta incluso no create react app vai cuidar de gerenciar esse arquivo, apenas por componente, que vamos poder utilizar e estilizar, e ele vai fazer as separações necessarias e nao precisamos gastar esforço com isso, a gente vai criar essa convenção, utilizar e pronto.)

-E chamar esse CSS no componente; (Vamos precisar depois de criar, chamar esse arquivo no componente, utilizar os estilos dele como class, oque é mais comum e pronto vai estar feito oque precisa.)

Agora vamos para o VSCODE:

Note que o index.css é chamado pelo index.js, que é meio que o arquivo central da nossa aplicação que vai jogar o react la no HTML, e esses estilos do index.css estão afetando diretamente nosso projeto, vamos apagar tudo nele e fazer nosso proprio estilo).

Note que estamos mechendo nas configurações globais do projeto, ele estando em componentes ou não, vai ganhar esse estilo.

Note que mechemos na cor de todos os h1, e todos os paragrafos vao ter uma cor de fundo, e botamos um padding para espaçar mais os elementos.

Muito util para mecher em configurações globais.

Agora vamos aprender a fazer por componentes: Quero esses estilos nos meus componentes de Frase:

- Criar o arquivo dentro da pasta components: Frase.module.css, esse arquivo me permite utilizar o css modules, escrevemos o css normal nada diferente, apenas que eu não posso criar classes com traço, usa o underline, ou maiusculas. 
- Criamos dentro do arquivo duas classes com estilos diferentes .fraseContainer para estilizar a div e .fraseContent para o conteudo da frase
- Depois de criar o CSS como usamos esse cara? Temos que importar, so que diferente do que a gente viu ali antes
- No css modules na primeira linha a gente escreve por convenção: import styles from './localdoarquivo'
- No nosso Frase.js vamos a div ja criada e digitar dentro da tag: className = {styles.fraseContainer} 
- E no App.js precisa ter o import do Frase igual como ja vinhamos fazendo: import Frase from './components/Frase'
- E no App.js no HTML invocamos atraves do nome Frase dentro de uma mesma tag que abre e fecha: <Frase />

Agora note que fizemos estilos independentes, e anteriormente globalmente.
A tag tem uma força menor que a classe, logo fazendo por classes se sobrepõe ao css global.
Não podemos usar esses estilos que criamos em outros componentes se não importarmos, tem que importar
Estilizando componentes de maneira unica e reutilizavel. 

Código:

index.css:

body {
 padding: 50px;
 background-color: #efefef;
}

h1 {
  color: #333;
}

p{
  background-color: #999;
  padding: 10px;
} 

App.js:

import './App.css'
import SayMyName from './components/SayMyName';
import Pessoa from './components/Pessoa';
import Frase from './components/Frase';


function App() {
  const nome = "Maria"

  return (
    <div className="App">
     <Frase />
     <Frase />
     <SayMyName nome="Ariel"/>
     <SayMyName nome="João"/>
     <SayMyName nome={nome}/>
     <Pessoa 
     nome="Sabrina" 
     idade="22" 
     profissao="Psicologa" 
     foto="https://via.placeholder.com/150"
     
     />
    </div>
    
  )
}

export default App;


Frase.js:

import styles from './Frase.module.css'

function Frase(){
 return(
    <div className= {styles.fraseContainer}>
        <p className= {styles.fraseContent}>Este é um componente com uma frase!</p>
    </div>
 )
}

export default Frase

Frase.module.css:

/*  Div que ta encapsulando a minha frase */
.fraseContainer {
    background-color: #333;
    border: 1px solid #111;

}
/* Conteudo da minha frase */
.fraseContent {
    color: #FFF;
    background-color: #333;
    margin: 0;
}









